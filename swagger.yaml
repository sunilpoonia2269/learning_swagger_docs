openapi: 3.0.0
info:
  title: Learn Express and Swagger
  description: A section about learning API documentation
  version: 1.1.0
  contact:
    email: sp2269sr@gmail.com
    url: "google.com"

# servers:
#   - url: "https://localhost:3000/api/v1"
#     description: HTTPS server for localhost - secure
#   - url: "http://localhost:3000/api/v1"
#     description: HTTP server for localhost - regular
servers:
  - url: "{protocol}://localhost:3000/api/{version}"
    description: HTTPS server for localhost
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - https
          - http
        default: http

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

# security:
#   - cookieAuth: []

paths:
  /:
    get:
      tags:
        - String
      servers:
        - url: "http://localhost:3000"
          description: Overriding default url for home path
      summary: returns a greeting message for visitor
      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: "Hello there"

  /sunil:
    get:
      tags:
        - String
      summary: returns a greet message from sunil
      security:
        - cookieAuth: []
      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: "Hello there"
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /course:
    get:
      tags:
        - Object
      summary: returns a unique object
      security:
        - cookieAuth: []
      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /courses:
    get:
      tags:
        - Array
      summary: returns all courses
      security:
        - cookieAuth: []
      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /mycourse/{courseId}:
    get:
      tags:
        - Object
      summary: returns a course on based of courseId
      security:
        - cookieAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          default: 22
      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /addCourse:
    post:
      tags:
        - Boolean
      summary: adds a new course to existing courses
      security:
        - cookieAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        201: #status code
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /coursequery:
    get:
      tags:
        - Object
      summary: gives location and device through query
      security:
        - cookieAuth: []
      parameters:
        - name: location
          required: true
          in: query
          schema:
            type: string
            enum: [Jaipur, Delhi, Mumbai]
          default: Jaipur

        - name: device
          required: true
          in: query
          schema:
            type: string
            enum: [mobile, web]
          default: web

      responses:
        200: #status code
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error

  /courseUpload:
    post:
      tags:
        - Boolean
      summary: uploading course image
      security:
        - cookieAuth: []
      parameters:
        - in: header
          name: auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                sampleFile:
                  type: string
                  format: binary

      responses:
        201: #status code
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        400: #status code
          description: Bad Request
        500: #status code
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
